
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'snowflake_az_dbt'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'snowflake_az_dbt'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  snowflake_az_dbt:
    # Configuration indicated by + and applies to all files under models/example/
    +materialized: "{% if target.name == 'unit_test' %}ephemeral{% else %}view{% endif %}"
    zz_unit_test:
      +materialized: ephemeral
      +enabled: "{{ (target.name == 'unit_test') | as_bool }}"

vars:
  target_env: "{{ target.name }}"
  ecc_regions: "{% if target.name == 'unit_test' %}['SAP_ECC']{% else %}['SAP_ECC_1','SAP_ECC_2']{% endif %}"
  regions: ['1','2']
  var_invocation_id: "{%  if target.name == 'unit_test' %}null{% else %}'{{ invocation_id }}'{% endif %}"
  VAR_CUR_TS: "{% if target.name == 'unit_test' %}null{% else %}VAR_CUR_TS{% endif %}"
